type User{
    id: ID
    username: String
    email: Email
    firstName: String
    lastName: String
    activated: Boolean
    authorities: [Authority]
}

extend type Mutation{
    # register new user
    addUser(user: UserInput!): User
    editUser(user: UserInput!): User
    deleteUser(id: ID!): Boolean
    # Activate a user. Must define the user password
    activateUser(credentials: ActivateUserInput!): User
}

input UserInput{
    id: ID
    username: String
    email: Email
    firstName: String
    lastName: String
    roles: [String]
}

input ActivateUserInput{
    username: String!
    password: String!
    activationKey: String!
}

extend type Query{
    #get all users
    list: [User]
    #get single user by username
    getUser(username: String!): User
}